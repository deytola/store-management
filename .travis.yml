language: node_js
node_js: 
  - "node"
install: 
  - npm install
cache:
  bundler: true
  directories:
    - node_modules
addons:
  code_climate:
    repo_token: 43ff4ab978a03ad6144fe8b0ba8afe5809ee82cd1d807dce0c96e68a0824bc7f
  chrome: stable
  #firefox: latest
services:
 - postgresql
env:
 global:
 - CC_TEST_REPORTER_ID=43ff4ab978a03ad6144fe8b0ba8afe5809ee82cd1d807dce0c96e68a0824bc7f

before_install:
  - nvm install                         # Install node version from .nvmrc
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)
 
before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
  - npm install codeclimate-test-reporter istanbul -g
script: 
 - npm test
 - nyc --reporter=lcov yarn run test
 - istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec --compilers js:babel-register && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage
after_success: 
  - npm run coverage
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
after_script: 
  - "cat coverage/lcov.info | node_modules/coveralls/bin/coveralls.js"
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json
  - codeclimate-test-reporter < ./coverage/lcov.info